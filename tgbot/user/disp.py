from aiogram.types import Message 

from tgbot.user import users
import config 


async def user_disp(message: Message):
    user_id = message.from_user.id
    text = message.text
    bot = message.bot

    is_new_user = users.register_or_update_user(message.from_user)
    user = users.get_user(user_id)

    if is_new_user:
        await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏')
    
    elif not user['organization_name']:
        users.save_organization_name(user_id, text)
        await message.answer('–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–ø—Ä–æ—Å –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ.')
        
        for admin_id in config.ADMIN_IDS:
            await bot.send_message(admin_id, 'üü¢ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å \n –°–º–æ—Ç—Ä–µ—Ç—å: /start')
        await bot.send_message(config.REPORTS_CHAT_ID, 'üü¢ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –±–æ—Ç–µ')
    
    elif user['is_request_declined']:
        await message.answer(
            '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω. \n'
            '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
        )
    
    elif user['manager_name']:
        manager_name = user['manager_name']
        await message.answer(f'–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {manager_name}')
    
    else:
        await message.answer('–í–∞—à –∑–∞–ø—Ä–æ—Å –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ')